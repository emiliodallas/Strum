version: '3'
services:
  producer:
    container_name: producer
    build:
      context: ./producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    volumes:
      - myvolume:/app/Shared
    networks:
      - mynetwork
    ports:
      - 8080:5000
    environment:
      TELEGRAM_TOKEN: "6032445966:AAGo-AkteKJIpeoNO1gtrGG4lusbppUUrNE"
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: mysecretpassword

  consumer:
    container_name: consumer
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    volumes:
      - myvolume:/app/Shared
    networks:
      - mynetwork
    environment:
      KAFKA_BROKERCONNECT: kafka:9092

  kafka:
    container_name: bitnami_kafka
    image: 'bitnami/kafka:latest'
    networks:
      - mynetwork
    environment:
    # KRaft settings 
      - KAFKA_CFG_NODE_ID=0 
      - KAFKA_CFG_PROCESS_ROLES=controller,broker 
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093 
    # Plaintext settings
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER 

    ports:
      - 9092:9092
      - 9094:9094

  postgres:
    container_name: postgresql
    image: postgres
    restart: always
    networks:
      - mynetwork
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    
  sql: 
    container_name: sql
    build:
      context: ./producer/psql
      dockerfile: Dockerfile
    depends_on:
      - postgres
    volumes:
      - myvolume:/app/Shared
    networks:
      - mynetwork
    environment:
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: mysecretpassword

volumes:
  myvolume:

networks:
  mynetwork: