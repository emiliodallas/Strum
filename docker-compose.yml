version: '3'
services:
  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    volumes:
      - myvolume:/app/Shared
    networks:
      - mynetwork
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: mysecretpassword

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - 5000:5000
    volumes:
      - myvolume:/app/Shared
    networks:
      - mynetwork

  zookeeper:
      image: confluentinc/cp-zookeeper:latest
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      networks:
        - mynetwork

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - mynetwork
    
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - mynetwork
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword

volumes:
  myvolume:

networks:
  mynetwork: